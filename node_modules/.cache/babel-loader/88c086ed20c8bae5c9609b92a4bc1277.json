{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/PaletteMetaForm.js\";\nimport React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase()));\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.showEmojiPicker = () => {\n      this.setState({\n        stage: \"emoji\"\n      });\n    };\n\n    this.state = {\n      stage: \"form\",\n      newPaletteName: \"\"\n    };\n  }\n\n  render() {\n    const {\n      newPaletteName\n    } = this.state;\n    const {\n      hideForm,\n      handleSubmit\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      open: this.state.stage === \"emoji\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.stage === \"form\",\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Choose a palette name\"), React.createElement(ValidatorForm, {\n      onSubmit: this.showEmojiPicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Please enter a name for the new palette.\"), React.createElement(TextValidator, {\n      value: newPaletteName,\n      fullWidth: true,\n      margin: \"normal\",\n      label: \"Palette Name\",\n      name: \"newPaletteName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter a palette name\", \"This name is used\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.hideForm,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Save Palette\")))));\n  }\n\n}\n\nexport default PaletteMetaForm;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/PaletteMetaForm.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","Picker","PaletteMetaForm","constructor","props","handleClickOpen","setState","open","handleClose","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","handleChange","evt","target","name","showEmojiPicker","stage","state","newPaletteName","render","hideForm","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,aAAR,EAAwBC,aAAxB,QAA4C,kCAA5C;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAO,+BAAP;;AAEA,MAAMC,eAAN,SAA8BX,SAA9B,CAAuC;AACtCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAQjBC,eARiB,GAQC,MAAM;AACrB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAd;AACF,KAVgB;;AAAA,SAYfC,WAZe,GAYH,MAAI;AACf,WAAKF,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACA,KAdc;;AAAA,SAefE,iBAfe,GAeG,MAAK;AACzBV,MAAAA,aAAa,CAACW,iBAAd,CAAgC,qBAAhC,EAAuDC,KAAK,IAC3D,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CACC,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAqBA,WAAW,CAACC,WAAZ,OAA8BJ,KAAK,CAACI,WAAN,EADpD,CADD;AAKA,KArBiB;;AAAA,SAsBlBC,YAtBkB,GAsBHC,GAAD,IAAQ;AACrB,WAAKX,QAAL,CAAc;AACb,SAACW,GAAG,CAACC,MAAJ,CAAWC,IAAZ,GAAoBF,GAAG,CAACC,MAAJ,CAAWP;AADlB,OAAd;AAGA,KA1BiB;;AAAA,SA2BlBS,eA3BkB,GA2BD,MAAK;AACrB,WAAKd,QAAL,CAAc;AACbe,QAAAA,KAAK,EAAE;AADM,OAAd;AAGA,KA/BiB;;AAEjB,SAAKC,KAAL,GAAW;AACVD,MAAAA,KAAK,EAAE,MADG;AAEVE,MAAAA,cAAc,EAAC;AAFL,KAAX;AAIA;;AA0BDC,EAAAA,MAAM,GAAE;AACP,UAAM;AAACD,MAAAA;AAAD,QAAoB,KAAKD,KAA/B;AACA,UAAM;AAACG,MAAAA,QAAD;AAAUC,MAAAA;AAAV,QAAyB,KAAKtB,KAApC;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AACC,MAAA,IAAI,EAAE,KAAKkB,KAAL,CAAWD,KAAX,KAAoB,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADD,EAMI,oBAAC,MAAD;AACG,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,KAAX,KAAmB,MAD5B;AAEG,MAAA,OAAO,EAAE,KAAKb,WAFjB;AAGG,yBAAgB,mBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALJ,EAQI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKY,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADD,EAIL,oBAAC,aAAD;AACI,MAAA,KAAK,EAAIG,cADb;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,MAAM,EAAG,QAHb;AAII,MAAA,KAAK,EAAE,cAJX;AAKI,MAAA,IAAI,EAAG,gBALX;AAMI,MAAA,QAAQ,EAAG,KAAKP,YANpB;AAOI,MAAA,UAAU,EAAG,CAAC,UAAD,EAAc,qBAAd,CAPjB;AAQC,MAAA,aAAa,EAAE,CAAC,sBAAD,EAAwB,mBAAxB,CARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJK,CADD,EAgBC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACG,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWqB,QADvB;AAEG,MAAA,KAAK,EAAC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAOC,oBAAC,MAAD;AACF,MAAA,OAAO,EAAE,WADP;AAEF,MAAA,KAAK,EAAI,WAFP;AAGF,MAAA,IAAI,EAAK,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPD,CAhBD,CARJ,CANJ,CADD;AAkDA;;AAvFqC;;AA0FvC,eAAevB,eAAf","sourcesContent":["import React ,{Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ValidatorForm , TextValidator} from \"react-material-ui-form-validator\"\nimport {Picker} from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\"\n\nclass PaletteMetaForm extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tstage :\"form\" ,\n\t\t\tnewPaletteName:\"\"\n\t\t}\n\t}\n\n\t handleClickOpen = () => {\n    \tthis.setState({open:true});\n \t};\n\n    handleClose=()=>{ \n    \tthis.setState({open :false});\n    };\n    componentDidMount=() =>{\n\t\tValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => \n\t\t\tthis.props.palettes.every(\n\t\t\t\t({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n\t\t\t)\n\t\t)\n\t}\n\thandleChange =(evt) =>{\n\t\tthis.setState({\n\t\t\t[evt.target.name] : evt.target.value\n\t\t})\n\t}\n\tshowEmojiPicker =() =>{\n\t\tthis.setState({\n\t\t\tstage :\"emoji\"\n\t\t})\n\t}\n\trender(){\n\t\tconst {newPaletteName } = this.state;\n\t\tconst {hideForm,handleSubmit} =this.props;\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Dialog >\n\t\t\t \t  <Picker \n\t\t\t \t  \topen={this.state.stage ===\"emoji\"}\n\t\t\t \t  />\n\t\t\t\t</Dialog>\n\t\t\t    <Dialog \n\t\t\t      \topen={this.state.stage===\"form\"} \n\t\t\t      \tonClose={this.handleClose} \n\t\t\t      \taria-labelledby=\"form-dialog-title\"\n\t\t\t    >\n\t\t\t        <DialogTitle id=\"form-dialog-title\">\n\t\t\t        \tChoose a palette name\n\t\t\t        </DialogTitle>\n\t\t\t        <ValidatorForm onSubmit={this.showEmojiPicker}>\n\t\t\t\t        <DialogContent>\n\t\t\t\t\t        <DialogContentText>\n\t\t\t\t\t          \tPlease enter a name for the new palette.\n\t\t\t\t\t        </DialogContentText>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t    value = {newPaletteName}\n\t\t\t\t\t\t\t    fullWidth\n\t\t\t\t\t\t\t    margin = \"normal\"\n\t\t\t\t\t\t\t    label =\"Palette Name\"\n\t\t\t\t\t\t\t    name  ='newPaletteName'\n\t\t\t\t\t\t\t    onChange ={this.handleChange}\n\t\t\t\t\t\t\t    validators ={[\"required\" , \"isPaletteNameUnique\"]}\n\t\t\t\t\t\t\t\terrorMessages={[\"Enter a palette name\",\"This name is used\"]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t        </DialogContent>\n\t\t\t\t        <DialogActions>\n\t\t\t\t\t        <Button \n\t\t\t\t\t          \tonClick={this.props.hideForm} \n\t\t\t\t\t          \tcolor=\"primary\"\n\t\t\t\t\t        >\n\t\t\t\t\t          \tCancel\n\t\t\t\t\t        </Button>\n\t\t\t\t\t        <Button \n\t\t\t\t\t\t\t    variant =\"contained\"\n\t\t\t\t\t\t\t    color   =\"secondary\"\n\t\t\t\t\t\t\t    type   = \"submit\"\t\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t    Save Palette\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t    \t</DialogActions>\n\t\t\t\t\t</ValidatorForm>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PaletteMetaForm;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}