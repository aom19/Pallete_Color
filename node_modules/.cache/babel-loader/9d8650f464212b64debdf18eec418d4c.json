{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/NewPaletteForm.js\";\nimport React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport seedColors from \"./seedColors\";\nimport Button from \"@material-ui/core/Button\";\nimport { ChromePicker } from \"react-color\";\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: true,\n      currentColor: \"teal\"\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      maxColors,\n      palettes\n    } = this.props;\n    const {\n      open,\n      colors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      edge: \"start\",\n      className: clsx(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Persistent drawer\"))), React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Design Your Palette\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Clear Palette\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Random Color\")), React.createElement(ChromePicker, {\n      color: this.state.currentColor,\n      onChangeComplete: newColor => console.log(newColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        backgroundColor: this.state.currentColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Add Color\")), React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nNewPaletteForm.defaultProps = {\n  maxColors: 20\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(NewPaletteForm);","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/NewPaletteForm.js"],"names":["React","Component","clsx","classNames","withStyles","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","styles","seedColors","Button","ChromePicker","NewPaletteForm","constructor","props","handleDrawerOpen","setState","open","handleDrawerClose","state","currentColor","render","classes","maxColors","palettes","colors","root","appBar","appBarShift","menuButton","hide","drawer","paper","drawerPaper","drawerHeader","newColor","console","log","backgroundColor","content","contentShift","defaultProps","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport seedColors from \"./seedColors\";\nimport Button from \"@material-ui/core/Button\";\nimport{ChromePicker} from \"react-color\";\n\n\n\n \nclass NewPaletteForm extends Component {\n  static defaultProps = {\n\tmaxColors: 20\n  };\n\nconstructor(props) {\n\tsuper(props);\n\t\tthis.state = {\n\t \t\topen: true,\n\t \t\tcurrentColor :\"teal\"\n\t\t};\n\n}\n\t\n\n\thandleDrawerOpen = () => {\n\tthis.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n\tthis.setState({ open: false });\n  };\n\nrender() {\n\tconst { classes, maxColors, palettes } = this.props;\n\tconst { open, colors } = this.state;\n\n  return (\n   <div className={classes.root}>\n\t   <AppBar\n\t\t\tposition=\"fixed\"\n\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t  [classes.appBarShift]: open,\n\t\t\t})}\n\t\t>\n\t\t\t<Toolbar>\n\t\t\t  <IconButton\n\t\t\t\tcolor=\"inherit\"\n\t\t\t\taria-label=\"open drawer\"\n\t\t\t\tonClick={this.handleDrawerOpen}\n\t\t\t\tedge=\"start\"\n\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\n\t\t\t  >\n\t\t\t\t<MenuIcon />\n\t\t\t  </IconButton>\n\t\t\t  <Typography variant=\"h6\" noWrap>\n\t\t\t\tPersistent drawer\n\t\t\t  </Typography>\n\t\t\t</Toolbar>\n\t  </AppBar>\n\t\t<Drawer\n\t\t  className={classes.drawer}\n\t\t  variant='persistent'\n\t\t  anchor='left'\n\t\t  open={open}\n\t\t  classes={{\n\t\t\tpaper: classes.drawerPaper\n\t\t  }}\n\t\t>\n\n\t\t<div className={classes.drawerHeader}>\n\t\t\t<IconButton onClick={this.handleDrawerClose}>\n\t\t\t  <ChevronLeftIcon />\n\t\t\t</IconButton>\n\t\t</div>\n\t\t<Divider />\n\t\t<Typography variant =\"h4\" >\n\t\t\tDesign Your Palette\n\t\t</Typography>\n\t\t<div>\n\t\t\t<Button variant = \"contained\" color =\"secondary\">\n\t\t\t\tClear Palette\n\t\t\t</Button>\n\t\t\t<Button variant = \"contained\" color =\"primary\">\n\t\t\t\tRandom Color\n\t\t\t</Button>\n\t\t</div>\n\t\t<ChromePicker  \n\t\t\tcolor={this.state.currentColor}\n\t\t    onChangeComplete={newColor => console.log(newColor)}\n\t\t/>\n\n\t\t<Button \n\t\t\tvariant=\"contained\" \n\t\t\tcolor=\"primary\"\n\t\t\tstyle = {{backgroundColor :this.state.currentColor}}\n\t\t>\n\t\t\tAdd Color\n\t\t</Button>\n\t\t</Drawer>\n\t\t<main\n\t\t  className={classNames(classes.content, {\n\t\t\t[classes.contentShift]: open\n\t\t  })}\n\t\t>\n\t\t  <div className={classes.drawerHeader} />\n\n\t\t</main>\n\t  </div>\n\t);\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);"]},"metadata":{},"sourceType":"module"}