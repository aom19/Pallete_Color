{"ast":null,"code":"import chroma from \"chroma-js\";\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction getRange(hexColor) {\n  const end = \"#fff\";\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction generatePalette(starterPalette) {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.color, 10).reverse();\n\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i]).css().replace(\"rgba\", \"rgb\").replace(\")\", \",1.0)\")\n      });\n    }\n  }\n\n  return newPalette;\n}\n\nfunction getScale(hexColor, numberofColors) {\n  return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberofColors);\n}\n\nexport { generatePalette };","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/colorHelpers.js"],"names":["chroma","levels","getRange","hexColor","end","darken","hex","generatePalette","starterPalette","newPalette","paletteName","id","emoji","colors","level","color","scale","getScale","reverse","i","push","name","toLowerCase","replace","rgb","css","rgba","numberofColors","mode"],"mappings":"AAEA,OAAOA,MAAP,MAAmB,WAAnB;AAGA,MAAMC,MAAM,GAAC,CAAC,EAAD,EAAI,GAAJ,EAAQ,GAAR,EAAY,GAAZ,EAAgB,GAAhB,EAAoB,GAApB,EAAwB,GAAxB,EAA4B,GAA5B,EAAgC,GAAhC,EAAoC,GAApC,CAAb;;AAGA,SAASC,QAAT,CAAkBC,QAAlB,EAA2B;AACzB,QAAMC,GAAG,GAAE,MAAX;AACA,SAAM,CACJJ,MAAM,CAACG,QAAD,CAAN,CACGE,MADH,CACU,GADV,EAEGC,GAFH,EADI,EAIFH,QAJE,EAKFC,GALE,CAAN;AAOD;;AAED,SAASG,eAAT,CAAyBC,cAAzB,EAAwC;AACtC,MAAIC,UAAU,GAAG;AACfC,IAAAA,WAAW,EAAGF,cAAc,CAACE,WADd;AAEfC,IAAAA,EAAE,EAAWH,cAAc,CAACG,EAFb;AAGfC,IAAAA,KAAK,EAASJ,cAAc,CAACI,KAHd;AAIfC,IAAAA,MAAM,EAAQ;AAJC,GAAjB;;AAOA,OAAI,IAAIC,KAAR,IAAiBb,MAAjB,EAAwB;AAClBQ,IAAAA,UAAU,CAACI,MAAX,CAAkBC,KAAlB,IAAyB,EAAzB;AACL;;AAEC,OAAI,IAAIC,KAAR,IAAiBP,cAAc,CAACK,MAAhC,EAAuC;AACrC,QAAIG,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACA,KAAP,EAAa,EAAb,CAAR,CAAyBG,OAAzB,EAAZ;;AACA,SAAI,IAAIC,CAAR,IAAaH,KAAb,EAAmB;AACjBP,MAAAA,UAAU,CAACI,MAAX,CAAkBZ,MAAM,CAACkB,CAAD,CAAxB,EAA6BC,IAA7B,CAAkC;AAChCC,QAAAA,IAAI,EAAE,GAAEN,KAAK,CAACM,IAAK,IAAGpB,MAAM,CAACkB,CAAD,CAAI,EADA;AAEhCR,QAAAA,EAAE,EAAGI,KAAK,CAACM,IAAN,CAAWC,WAAX,GAAyBC,OAAzB,CAAiC,IAAjC,EAAsC,GAAtC,CAF2B;AAGhCjB,QAAAA,GAAG,EAAEU,KAAK,CAACG,CAAD,CAHsB;AAIhCK,QAAAA,GAAG,EAAExB,MAAM,CAACgB,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBM,GAAjB,EAJ2B;AAKhCC,QAAAA,IAAI,EACF1B,MAAM,CAACgB,KAAK,CAACG,CAAD,CAAN,CAAN,CACGM,GADH,GAEGF,OAFH,CAEW,MAFX,EAEkB,KAFlB,EAGGA,OAHH,CAGW,GAHX,EAGe,OAHf;AAN8B,OAAlC;AAWD;AACF;;AACD,SAAOd,UAAP;AACH;;AAKD,SAASQ,QAAT,CAAkBd,QAAlB,EAA6BwB,cAA7B,EAA4C;AAE3C,SAAO3B,MAAM,CACXgB,KADK,CACCd,QAAQ,CAACC,QAAD,CADT,EAEHyB,IAFG,CAEE,KAFF,EAGDf,MAHC,CAGMc,cAHN,CAAP;AAIA;;AAMD,SAAQpB,eAAR","sourcesContent":["\n\nimport chroma from \"chroma-js\";\n\n\nconst levels=[50,100,200,300,400,500,600,700,800,900];\n\n\nfunction getRange(hexColor){\n  const end =\"#fff\";\n  return[\n    chroma(hexColor)\n      .darken(1.4)\n      .hex(),\n      hexColor,\n      end\n  ];\n}\n\nfunction generatePalette(starterPalette){\n  let newPalette = {\n    paletteName : starterPalette.paletteName,\n    id         : starterPalette.id,\n    emoji       : starterPalette.emoji,\n    colors      : {}\n\n  };\n  for(let level of levels){\n        newPalette.colors[level]=[];\n  }\n\n    for(let color of starterPalette.colors){\n      let scale = getScale(color.color,10).reverse();\n      for(let i in scale){\n        newPalette.colors[levels[i]].push({\n          name:`${color.name} ${levels[i]}`,\n          id : color.name.toLowerCase().replace(/ /g,\"-\"),\n          hex: scale[i],\n          rgb: chroma(scale[i]).css(),\n          rgba: \n            chroma(scale[i])\n              .css()\n              .replace(\"rgba\",\"rgb\")\n              .replace(\")\",\",1.0)\")\n        })\n      }\n    }\n    return newPalette;\n}\n\n\n\n\nfunction getScale(hexColor , numberofColors){\n\n return chroma\n  .scale(getRange(hexColor))\n    .mode(\"lab\")\n      .colors(numberofColors);\n}\n\n\n\n\n\nexport {generatePalette} ;"]},"metadata":{},"sourceType":"module"}