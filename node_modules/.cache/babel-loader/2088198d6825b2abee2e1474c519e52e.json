{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/ColorPickerForm.js\";\nimport React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport { ChromePicker } from \"react-color\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DraggableColorList from \"./DraggableColorList\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport { Link } from \"react-router-dom\";\n\nclass ColorPickerForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ChromePicker, {\n      color: this.state.currentColor,\n      onChangeComplete: this.updateCurrentColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(ValidatorForm, {\n      onSubmit: this.addNewColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: this.state.newColorName,\n      name: \"newColorName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isColorNameUnique\", \"isColorUnique\"],\n      errorMessages: [\"This field is required\", \"Color name must be unique\", \"This color already exist\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        backgroundColor: this.props.paletteIsFull ? \"grey\" : this.state.currentColor\n      },\n      type: \"submit\",\n      disabled: this.props.paletteIsFull,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.prop.paletteIsFull ? \"Palette Full\" : \"Add Color\")));\n  }\n\n}\n\nexport default ColorPickerForm;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/ColorPickerForm.js"],"names":["React","Component","clsx","classNames","withStyles","Drawer","Typography","Divider","IconButton","ChevronLeftIcon","styles","Button","ChromePicker","ValidatorForm","TextValidator","DraggableColorList","arrayMove","Link","ColorPickerForm","constructor","props","render","state","currentColor","updateCurrentColor","addNewColor","newColorName","handleChange","backgroundColor","paletteIsFull","prop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAOC,YAAP,QAA0B,aAA1B;AACA,SAAQC,aAAR,EAAwBC,aAAxB,QAA4C,kCAA5C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAGA,MAAMC,eAAN,SAA8BjB,SAA9B,CAAuC;AACtCkB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA;;AACDC,EAAAA,MAAM,GAAE;AACP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,YADnB;AAEI,MAAA,gBAAgB,EAAE,KAAKC,kBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAKC,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAI,KAAKC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AACC,MAAA,KAAK,EAAI,KAAKH,KAAL,CAAWI,YADrB;AAEC,MAAA,IAAI,EAAG,cAFR;AAGC,MAAA,QAAQ,EAAG,KAAKC,YAHjB;AAIC,MAAA,UAAU,EAAG,CACZ,UADY,EAEZ,mBAFY,EAGZ,eAHY,CAJd;AASC,MAAA,aAAa,EAAG,CACf,wBADe,EAEf,2BAFe,EAGf,0BAHe,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAgBC,oBAAC,MAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,KAAK,EAAC,SAFP;AAGC,MAAA,KAAK,EAAI;AACRC,QAAAA,eAAe,EAAG,KAAKR,KAAL,CAAWS,aAAX,GAChB,MADgB,GAEjB,KAAKP,KAAL,CAAWC;AAHJ,OAHV;AAOC,MAAA,IAAI,EAAI,QAPT;AAQC,MAAA,QAAQ,EAAG,KAAKH,KAAL,CAAWS,aARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,KAAKC,IAAL,CAAUD,aAAV,GAA0B,cAA1B,GAA0C,WAV5C,CAhBD,CALD,CADD;AAsCA;;AA5CqC;;AA+CvC,eAAeX,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport{ChromePicker} from \"react-color\";\nimport {ValidatorForm , TextValidator} from \"react-material-ui-form-validator\"\nimport DraggableColorList from \"./DraggableColorList\"\nimport {arrayMove} from \"react-sortable-hoc\"\nimport {Link} from \"react-router-dom\";\n\n\nclass ColorPickerForm extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ChromePicker  \n\t\t\t\t\tcolor={this.state.currentColor}\n\t\t\t   \t onChangeComplete={this.updateCurrentColor}\n\t\t\t\t/>\n\t\t\t\t<ValidatorForm onSubmit = {this.addNewColor}>\n\t\t\t\t\t<TextValidator \n\t\t\t\t\t\tvalue = {this.state.newColorName}\n\t\t\t\t\t\tname  ='newColorName'\n\t\t\t\t\t\tonChange ={this.handleChange}\n\t\t\t\t\t\tvalidators ={[\n\t\t\t\t\t\t\t\"required\" ,\n\t\t\t\t\t\t\t\"isColorNameUnique\",\n\t\t\t\t\t\t\t\"isColorUnique\"\n\t\t\t\t\t\t]}\n\t\t\t\t\t\terrorMessages ={[\n\t\t\t\t\t\t\t\"This field is required\",\n\t\t\t\t\t\t\t\"Color name must be unique\",\n\t\t\t\t\t\t\t\"This color already exist\"\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\tbackgroundColor : this.props.paletteIsFull\n\t\t\t\t\t\t\t? \"grey\"\n\t\t\t\t\t\t\t:this.state.currentColor}}\n\t\t\t\t\t\ttype  = \"submit\"\n\t\t\t\t\t\tdisabled ={this.props.paletteIsFull}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.prop.paletteIsFull ? \"Palette Full\" :\"Add Color\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</ValidatorForm>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default ColorPickerForm;"]},"metadata":{},"sourceType":"module"}