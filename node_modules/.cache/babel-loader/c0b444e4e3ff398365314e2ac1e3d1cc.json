{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Palette from \"./Palette\";\nimport seedColors from \"./seedColors\";\nimport { generatePalette } from \"./colorHelpers\";\nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport NewPaletteForm from \"./NewPaletteForm\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\nimport Page from \"./Page\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deletePalette = id => {\n      this.setState(st => ({\n        palettes: st.palettes.filter(palette => palette.id !== id)\n      }), this.syncLocalStorage);\n    };\n\n    this.savePalette = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorage);\n    };\n\n    this.syncLocalStorage = () => {\n      window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n    };\n\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n  }\n\n  findPalette(id) {\n    return this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  }\n\n  render() {\n    return React.createElement(Route, {\n      render: ({\n        location\n      }) => React.createElement(TransitionGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        classNames: \"page\",\n        timeout: 500,\n        key: location.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(NewPaletteForm, Object.assign({\n          savePalette: this.savePalette,\n          palettes: this.state.palettes\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes\n        }, routeProps, {\n          deletePalette: this.deletePalette,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Palette, {\n          palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: () => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(SingleColorPalette, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/App.js"],"names":["React","Component","Route","Switch","Palette","seedColors","generatePalette","PaletteList","SingleColorPalette","NewPaletteForm","TransitionGroup","CSSTransition","Page","App","constructor","props","deletePalette","id","setState","st","palettes","filter","palette","syncLocalStorage","savePalette","newPalette","state","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","findPalette","find","render","location","key","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport {Route , Switch} from \"react-router-dom\";\nimport Palette from \"./Palette\"\nimport seedColors from \"./seedColors\";\nimport {generatePalette} from \"./colorHelpers\"; \nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport NewPaletteForm from \"./NewPaletteForm\"\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport \"./App.css\"\nimport Page from \"./Page\";\n\nclass  App extends Component {\n    constructor(props){\n        super(props);\n        const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n        this.state = { palettes : savedPalettes || seedColors}\n\n    }\n\n\tfindPalette(id){\n\t\treturn this.state.palettes.find(function(palette){\n\t\t\treturn palette.id === id\n\t\t});\n\t}\n    deletePalette =(id) =>{\n        this.setState(\n            st=> ({palettes :st.palettes.filter(palette => \n                palette.id !== id)\n            }),\n            this.syncLocalStorage\n        ) \n    }\n\n    savePalette = (newPalette) =>{\n        this.setState({\n            palettes: [...this.state.  palettes,newPalette]},\n            this.syncLocalStorage\n        )\n\n    \n    }\n\n    syncLocalStorage =() => {\n        window.localStorage.setItem(\"palettes\" ,\n            JSON.stringify(this.state.palettes)\n        )\n    }\n\n\n  render(){\n  \t\n    return (\n        <Route render ={\n            ({location}) =>\n            <TransitionGroup >\n                <CSSTransition \n                    classNames=\"page\"\n                    timeout={500}\n                    key ={location.key}\n                >\n                    <Switch location={location}>\n                        <Route \n                            exact\n                            path = \"/palette/new\"\n                            render ={(routeProps) =>(\n                                    <Page>\n                                    <NewPaletteForm \n                                        savePalette = {this.savePalette}\n                                        palettes = {this.state.palettes}\n                                        {...routeProps}\n                                    />\n                                    </Page>\n                            )}\n                        />\n                        <Route \n                                exact \n                                path    =\"/palette/:paletteId/:colorId\" \n                                render  ={ routeProps => \n                                    <Page>\n                                        <SingleColorPalette \n                                            colorId = {routeProps.match.params.colorId }\n                                            palette= {generatePalette(\n                                                this.findPalette(routeProps.match.params.paletteId)\n                                            )} \n                                        />\n                                    </Page>\n                                }\n                            />\n                            <Route \n                                exact \n                                path    ='/' \n                                render  ={ (routeProps) =>\n                                    <Page>\n                                        <PaletteList \n                                            palettes = {this.state.palettes}{...routeProps}\n                                            deletePalette={this.deletePalette}\n                                        /> \n                                    </Page>\n                                }\n                            />\n                            <Route \n                                exact \n                                path    =\"/palette/:id\" \n                                render  ={ routeProps => \n                                    <Page>\n                                        <Palette palette= {generatePalette(\n                                            this.findPalette(routeProps.match.params.id)\n                                            )} \n                                        />\n                                    </Page>\n                                }\n                            />\n                            <Route \n                                exact\n                                path    =\"/palette/:paletteId/:colorId\" \n                                render  ={() =>\n                                    <Page>\n                                         <SingleColorPalette />\n                                    </Page>\n                                }\n                            />\n                </Switch>\n            </CSSTransition>\n        </TransitionGroup>\n        }/>\n    \t\n\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}