{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/PaletteFormNav.js\";\nimport React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport { ChromePicker } from \"react-color\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DraggableColorList from \"./DraggableColorList\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nclass PaletteFormNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase()));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      newPaletteName: \"\"\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      edge: \"start\",\n      className: clsx(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Persistent drawer\"), React.createElement(ValidatorForm, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: this.state.newPaletteName,\n      label: \"Palette Name\",\n      name: \"newPaletteName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter a palette name\", \"This name is used\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Save Palette\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Go Back\"))))));\n  }\n\n}\n\nexport default PaletteFormNav;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/PaletteFormNav.js"],"names":["React","Component","clsx","classNames","withStyles","Drawer","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","styles","Button","ChromePicker","ValidatorForm","TextValidator","DraggableColorList","arrayMove","Link","CssBaseline","PaletteFormNav","constructor","props","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","handleChange","e","setState","target","name","state","newPaletteName","render","classes","open","appBar","appBarShift","handleDrawerOpen","menuButton","hide","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from 'clsx';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styles from \"./styles/NewPaletteFormStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport{ChromePicker} from \"react-color\";\nimport {ValidatorForm , TextValidator} from \"react-material-ui-form-validator\"\nimport DraggableColorList from \"./DraggableColorList\"\nimport {arrayMove} from \"react-sortable-hoc\"\nimport {Link} from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nclass PaletteFormNav extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewPaletteName :\"\"\n\t\t}\n\t}\n\n\tcomponentDidMount=() =>{\n\t\tValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => \n\t\t\tthis.props.palettes.every(\n\t\t\t\t({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n\t\t\t)\n\t\t)\n\t}\n\thandleChange =(e) =>{\n  \tthis.setState({\n  \t\t[e.target.name] : e.target.value\n  \t})\n  }\n\n\n\t\n\trender(){\n\t\tconst {classes , open} = this.props;\n\t\treturn(\n\t\t\t<div> \n\t\t\t\t<CssBaseline />\n\t  \t\t\t<AppBar\n\t\t\t\t\tposition=\"fixed\"\n\t\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t \t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={this.handleDrawerOpen}\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\n\t\t\t\t    >\n\t\t\t\t    \t<MenuIcon />\n\t\t\t\t    </IconButton>\n\t\t\t\t    <Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tPersistent drawer\n\t\t\t\t    </Typography>\n\t\t\t\t    <ValidatorForm onSubmit={this.handleSubmit}>\n\t\t\t\t\t    <TextValidator\n\t\t\t\t\t    \tvalue = {this.state.newPaletteName}\n\t\t\t\t\t    \tlabel =\"Palette Name\"\n\t\t\t\t\t    \tname  ='newPaletteName'\n\t\t\t\t\t    \tonChange ={this.handleChange}\n\t\t\t\t\t    \tvalidators ={[\"required\" , \"isPaletteNameUnique\"]}\n\t\t\t\t\t    \terrorMessages={[\"Enter a palette name\",\"This name is used\"]}\n\t\t\t\t\t    />\n\n\n\t\t\t\t\t    <Button \n\t\t\t\t\t    \tvariant =\"contained\"\n\t\t\t\t\t    \tcolor   =\"secondary\"\n\t\t\t\t\t    \ttype   = \"submit\"\n\t\t\t\t\t    \tonClick ={this.handleSubmit}\n\t\t\t\t\t    >\n\t\t\t\t\t    \tSave Palette\n\n\t\t\t\t\t    </Button>\n\t\t\t\t\t    <Link to =\"/\">\n\t\t\t\t\t    \t<Button \n\t\t\t\t\t    \t\tvariant =\"contained\"\n\t\t\t\t\t    \t\tcolor   =\"primary\"\n\t\t\t\t\t    \t>\n\t\t\t\t\t    \t\tGo Back\n\t\t\t\t\t    \t</Button> \n\t\t\t\t\t    </Link>\n\t\t\t\t\t    \n\t\t\t\t    </ValidatorForm>\n\t\t\t\t</Toolbar>\n\t\t    </AppBar>\n\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default PaletteFormNav ;"]},"metadata":{},"sourceType":"module"}