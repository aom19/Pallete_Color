{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Palette from \"./Palette\";\nimport seedColors from \"./seedColors\";\nimport { generatePalette } from \"./colorHelpers\";\nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport NewPaletteForm from \"./NewPaletteForm\";\nimport Particles from 'react-particles-js';\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 700\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deletePalette = id => {\n      this.setState(st => ({\n        palettes: st.palettes.filter(palette => palette.id !== id)\n      }), this.syncLocalStorage);\n    };\n\n    this.savePalette = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorage);\n    };\n\n    this.syncLocalStorage = () => {\n      window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n    };\n\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n  }\n\n  findPalette(id) {\n    return this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/palette/new\",\n      render: routeProps => React.createElement(NewPaletteForm, Object.assign({\n        savePalette: this.savePalette,\n        palettes: this.state.palettes\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:paletteId/:colorId\",\n      render: routeProps => React.createElement(SingleColorPalette, {\n        colorId: routeProps.match.params.colorId,\n        palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routeProps => React.createElement(PaletteList, Object.assign({\n        palettes: this.state.palettes\n      }, routeProps, {\n        deletePalette: this.deletePalette,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:id\",\n      render: routeProps => React.createElement(Palette, {\n        palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:paletteId/:colorId\",\n      render: () => React.createElement(SingleColorPalette, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/App.js"],"names":["React","Component","Route","Switch","Palette","seedColors","generatePalette","PaletteList","SingleColorPalette","NewPaletteForm","Particles","particlesOption","particles","number","value","density","enable","value_area","App","constructor","props","deletePalette","id","setState","st","palettes","filter","palette","syncLocalStorage","savePalette","newPalette","state","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","findPalette","find","render","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport {Route , Switch} from \"react-router-dom\";\nimport Palette from \"./Palette\"\nimport seedColors from \"./seedColors\";\nimport {generatePalette} from \"./colorHelpers\"; \nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport NewPaletteForm from \"./NewPaletteForm\"\nimport Particles from 'react-particles-js';\n\n\nconst particlesOption ={\n  particles: {\n    number:{\n      value: 250,\n      density:{\n        enable :true,\n        value_area : 700\n      }\n    }\n  }\n}\nclass  App extends Component {\n    constructor(props){\n        super(props);\n        const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n        this.state = { palettes : savedPalettes || seedColors}\n\n    }\n\n\tfindPalette(id){\n\t\treturn this.state.palettes.find(function(palette){\n\t\t\treturn palette.id === id\n\t\t});\n\t}\n    deletePalette =(id) =>{\n        this.setState(\n            st=> ({palettes :st.palettes.filter(palette => \n                palette.id !== id)\n            }),\n            this.syncLocalStorage\n        ) \n    }\n\n    savePalette = (newPalette) =>{\n        this.setState({\n            palettes: [...this.state.  palettes,newPalette]},\n            this.syncLocalStorage\n        )\n\n    \n    }\n\n    syncLocalStorage =() => {\n        window.localStorage.setItem(\"palettes\" ,\n            JSON.stringify(this.state.palettes)\n        )\n    }\n\n\n  render(){\n  \t\n    return (\n        <div>\n        <Particles />\n    \t<Switch>\n    \t<Route \n    \t\texact\n    \t\tpath = \"/palette/new\"\n    \t\trender ={(routeProps) =>\n    \t\t\t<NewPaletteForm \n                    savePalette = {this.savePalette}\n                    palettes = {this.state.palettes}\n                    {...routeProps}\n                />\n    \t\t}\n    \t/>\n    \t<Route \n    \t\t\texact \n    \t\t\tpath\t=\"/palette/:paletteId/:colorId\" \n    \t\t\trender  ={ routeProps => \n    \t\t\t\t<SingleColorPalette \n    \t\t\t\t\tcolorId = {routeProps.match.params.colorId }\n    \t\t\t\t\tpalette= {generatePalette(\n    \t\t\t\t\t\tthis.findPalette(routeProps.match.params.paletteId)\n    \t\t\t    \t)} \n    \t\t\t\t/>\n    \t\t\t}\n    \t\t/>\n    \t\t<Route \n    \t\t\texact \n    \t\t\tpath\t='/' \n    \t\t\trender\t={ (routeProps) =>\n    \t\t\t\t<PaletteList \n                        palettes = {this.state.palettes}{...routeProps}\n                        deletePalette={this.deletePalette}\n                    /> \n    \t\t\t}\n    \t\t/>\n    \t\t<Route \n    \t\t\texact \n    \t\t\tpath\t=\"/palette/:id\" \n    \t\t\trender  ={ routeProps => \n    \t\t\t\t<Palette palette= {generatePalette(\n    \t\t\t\t\tthis.findPalette(routeProps.match.params.id)\n    \t\t\t    \t)} \n    \t\t\t\t/>\n    \t\t\t}\n    \t\t/>\n    \t\t<Route \n    \t\t\texact\n    \t\t\tpath \t=\"/palette/:paletteId/:colorId\" \n    \t\t\trender  ={() => <SingleColorPalette />}\n    \t\t/>\n    \t</Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}