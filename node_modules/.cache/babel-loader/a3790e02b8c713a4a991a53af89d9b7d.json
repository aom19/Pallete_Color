{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/PaletteMetaForm.js\";\nimport React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase()));\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.state = {\n      open: true,\n      newPaletteName: \"\"\n    };\n  }\n\n  render() {\n    const {\n      newPaletteName\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Open form dialog\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.handleSubmit(newPaletteName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: newPaletteName,\n      label: \"Palette Name\",\n      name: \"newPaletteName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter a palette name\", \"This name is used\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Save Palette\")))));\n  }\n\n}\n\nexport default PaletteMetaForm;","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/PaletteMetaForm.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","PaletteMetaForm","constructor","props","handleClickOpen","setState","open","handleClose","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","handleChange","evt","target","name","state","newPaletteName","render","handleSubmit"],"mappings":"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","sourcesContent":["import React ,{Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ValidatorForm , TextValidator} from \"react-material-ui-form-validator\"\n\n\nclass PaletteMetaForm extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\topen :true,\n\t\t\tnewPaletteName:\"\"\n\t\t}\n\t}\n\n\t handleClickOpen = () => {\n    \tthis.setState({open:true});\n \t};\n\n    handleClose=()=>{\n    \tthis.setState({open :false});\n    };\n    componentDidMount=() =>{\n\t\tValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => \n\t\t\tthis.props.palettes.every(\n\t\t\t\t({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n\t\t\t)\n\t\t)\n\t}\n\thandleChange =(evt) =>{\n\t\tthis.setState({\n\t\t\t[evt.target.name] : evt.target.value\n\t\t})\n\t}\n\n\trender(){\n\t\tconst {newPaletteName } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button \n\t\t\t\t\tvariant=\"outlined\" \n\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\tonClick={this.handleClickOpen}\n\t\t\t\t>\n      \t\t\t  Open form dialog\n     \t\t    </Button>\n\t\t\t      <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n\t\t\t        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n\t\t\t        <DialogContent>\n\t\t\t          <DialogContentText>\n\t\t\t            To subscribe to this website, please enter your email address here. We will send updates\n\t\t\t            occasionally.\n\t\t\t          </DialogContentText>\n\t\t\t          <ValidatorForm onSubmit={() => this.props.handleSubmit(newPaletteName)}>\n\t\t\t\t\t    <TextValidator\n\t\t\t\t\t    \tvalue = {newPaletteName}\n\n\t\t\t\t\t    \tlabel =\"Palette Name\"\n\t\t\t\t\t    \tname  ='newPaletteName'\n\t\t\t\t\t    \tonChange ={this.handleChange}\n\t\t\t\t\t    \tvalidators ={[\"required\" , \"isPaletteNameUnique\"]}\n\t\t\t\t\t    \terrorMessages={[\"Enter a palette name\",\"This name is used\"]}\n\t\t\t\t\t    />\n\n\n\t\t\t\t\t    \n\t\t\t\t\t</ValidatorForm>\n\t\t\t        </DialogContent>\n\t\t\t        <DialogActions>\n\t\t\t          <Button onClick={this.handleClose} color=\"primary\">\n\t\t\t            Cancel\n\t\t\t          </Button>\n\t\t\t           <DialogActions>\n\t\t\t          <Button onClick={this.handleClose} color=\"primary\">\n\t\t\t            Cancel\n\t\t\t          </Button>\n\t\t\t        <Button \n\t\t\t\t\t    \tvariant =\"contained\"\n\t\t\t\t\t    \tcolor   =\"secondary\"\n\t\t\t\t\t    \ttype   = \"submit\"\n\t\t\t\t\t    \t\n\t\t\t\t\t    >\n\t\t\t\t\t    \tSave Palette\n\n\t\t\t\t\t    </Button>\n\t\t\t        </DialogActions>\n\t\t\t        </DialogActions>\n\t\t\t    </Dialog>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PaletteMetaForm;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}