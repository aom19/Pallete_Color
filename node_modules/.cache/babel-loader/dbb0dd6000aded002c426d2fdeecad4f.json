{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/ColorBox.js\";\nimport React, { Component } from 'react';\nimport \"./ColorBox.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Link } from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\"\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({\n      copied: true\n    }, () => {\n      setTimeout(() => this.setState({\n        copied: false\n      }), 1200);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      paletteId,\n      id,\n      showLink,\n      classes\n    } = this.props;\n    const {\n      copied\n    } = this.state;\n    const isDarkColor = chroma(background).luminance() <= 0.08;\n    const isLightColor = chroma(background).luminance() >= 0.7;\n    return React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.changeCopyState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: background\n      },\n      className: \"ColorBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: background\n      },\n      className: `copy-overlay ${copied && \"show\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `copy-msg ${copied && \"show\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" copied! \"), React.createElement(\"p\", {\n      className: classes.copyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.background)), React.createElement(\"div\", {\n      className: \"copy-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.colorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", name, \" \")), React.createElement(\"button\", {\n      className: `copy-button  ${isLightColor && \"dark-text\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Copy \")), showLink && React.createElement(Link, {\n      to: `/palette/${paletteId}/${id}`,\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `see-more ${isLightColor && \"dark-text\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" MORE \"))));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/ColorBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","copyText","color","props","background","luminance","colorName","ColorBox","constructor","state","copied","changeCopyState","bind","setState","setTimeout","render","name","paletteId","id","showLink","classes","isDarkColor","isLightColor","e","stopPropagation"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport \"./ColorBox.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {Link} from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport {withStyles } from \"@material-ui/styles\";\n\n\nconst styles = {\n\tcopyText: {\n\t\tcolor : props => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n\t},\n\tcolorName:{\n\t\tcolor : props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\"\n\t}\n\n};\n\nclass ColorBox extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tcopied :false\n\t\t}\n\t\tthis.changeCopyState =this.changeCopyState.bind(this);\n\t}\n\tchangeCopyState(){\n\t\tthis.setState({ copied : true } , () =>{\n\t\t\tsetTimeout(() => this.setState({copied : false}) , 1200);\n\t\t});\n\t\t\n\t}\n\trender(){\n\n\t\tconst {name,background,paletteId,id,showLink ,classes } = this.props;\n\t\tconst {copied} \t\t\t = this.state;\n\t\tconst isDarkColor = chroma(background).luminance() <=0.08;\n\t\tconst isLightColor = chroma(background).luminance() >= 0.7;\n\t\treturn(\n\t\t\t<CopyToClipboard text={background} onCopy={this.changeCopyState}>\n\t\t\t\t<div \n\t\t\t\t\tstyle={{background : background}}\n\t\t\t\t\tclassName= \"ColorBox\" > \n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle={{background : background}} \n\t\t\t\t\t\tclassName={`copy-overlay ${copied && \"show\"}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={`copy-msg ${copied && \"show\"}`}>\n\t\t\t\t\t\t<h1> copied! </h1>\n\t\t\t\t\t\t\t<p className={classes.copyText}>\n\t\t\t\t\t\t\t{this.props.background} \n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"copy-container\"> \n\t\t\t\t\t\t\t<div className=\"box-content\">\n\t\t\t\t\t\t\t\t<span className ={classes.colorName}> {name} </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className={`copy-button  ${isLightColor && \"dark-text\"}`}> Copy </button>\n\t\t \t\t\t\t</div>\n\t\t \t\t\t{showLink && ( \n\t\t\t \t\t\t<Link \n\t\t\t \t\t\t\tto= {`/palette/${paletteId}/${id}`} \n\t\t\t \t\t\t\tonClick={ (e) => e.stopPropagation()}\n\t\t\t \t\t\t>\n\t\t \t\t\t\t\t<span className={`see-more ${isLightColor && \"dark-text\"}`}> MORE </span>\n\t\t \t\t\t\t</Link> \n\t \t\t\t\t)}\n\t \t\t\t</div>\n \t\t\t</CopyToClipboard>\n\t\t);\n\t}\n}\nexport default withStyles(styles)(ColorBox); "]},"metadata":{},"sourceType":"module"}