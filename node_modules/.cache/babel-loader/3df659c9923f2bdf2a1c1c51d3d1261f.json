{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/NewPaletteForm.js\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport { arrayMove } from \"react-sortable-hoc\"; // import styles from \"./styles/NewPaletteFormStyles\";\n\nimport seedColors from \"./seedColors\";\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: true\n    }; // const classes = useStyles();\n    //  \tconst theme = useTheme();\n    //  \tconst [open, setOpen] = React.useState(false);\n  }\n\n  render() {\n    const {\n      classes,\n      maxColors,\n      palettes\n    } = this.props;\n    const {\n      open,\n      colors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Design Your Palette\"), React.createElement(\"div\", {\n      className: classes.buttons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.clearColors,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Clear Palette\"), React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.button,\n      color: \"primary\",\n      onClick: this.addRandomColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Random Color\")))), React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nNewPaletteForm.defaultProps = {\n  maxColors: 20\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(NewPaletteForm);","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/NewPaletteForm.js"],"names":["React","Component","classNames","withStyles","Drawer","Typography","Divider","IconButton","ChevronLeftIcon","Button","arrayMove","seedColors","NewPaletteForm","constructor","props","handleDrawerOpen","setState","open","handleDrawerClose","state","render","classes","maxColors","palettes","colors","root","drawer","paper","drawerPaper","drawerHeader","container","buttons","clearColors","button","addRandomColor","content","contentShift","defaultProps","styles","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport { arrayMove } from \"react-sortable-hoc\";\n// import styles from \"./styles/NewPaletteFormStyles\";\nimport seedColors from \"./seedColors\";\n\nclass NewPaletteForm extends Component {\n\n  static defaultProps = {\n    maxColors: 20\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    };\n\t// const classes = useStyles();\n //  \tconst theme = useTheme();\n //  \tconst [open, setOpen] = React.useState(false);\n}\n\t\n\n\thandleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\nrender() {\n\tconst { classes, maxColors, palettes } = this.props;\n    const { open, colors } = this.state;\n\n  return (\n   <div className={classes.root}>\n       \n        <Drawer\n          className={classes.drawer}\n          variant='persistent'\n          anchor='left'\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <div className={classes.container}>\n            <Typography variant='h4' gutterBottom>\n              Design Your Palette\n            </Typography>\n            <div className={classes.buttons}>\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={this.clearColors}\n                className={classes.button}\n              >\n                Clear Palette\n              </Button>\n              <Button\n                variant='contained'\n                className={classes.button}\n                color='primary'\n                onClick={this.addRandomColor}\n               \n              >\n                Random Color\n              </Button>\n            </div>\n            \n          </div>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open\n          })}\n        >\n          <div className={classes.drawerHeader} />\n         \n        </main>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);"]},"metadata":{},"sourceType":"module"}