{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/gitHub/Palette-Color/src/ColorBox.js\";\nimport React, { Component } from 'react';\nimport \"./ColorBox.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Link } from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  ColorBox: {\n    width: \"20%\",\n    height: props => props.showingFullPalette ? \"25%\" : \"50%\",\n    margin: \"0 auto\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-3.5px\",\n    \"&:hover button\": {\n      opacity: 1\n    }\n  },\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\"\n  },\n  seeMore: {\n    background: \"rgba(255,255,255,0.3)\",\n    position: \"absolute\",\n    border: \"none\",\n    right: \"0px\",\n    bottom: \"0px\",\n    width: \"60px\",\n    height: \"30px\",\n    textAlign: \"center\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\",\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.7)\" : \"white\"\n  },\n  copyButton: {\n    width: \"100px\",\n    height: \"30px\",\n    display: \"inline-block\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginLeft: \" -50px\",\n    marginTop: \"-15px\",\n    textAlign: \"center\",\n    outline: \"none\",\n    background: \"rgba(255,255,255,0.3)\",\n    fontSize: \"1rem\",\n    lineHeight: \"0px\",\n    textTransform: \"uppercase\",\n    border: \"none\",\n    textDecoration: \"none\",\n    opacity: 0,\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.7)\" : \"white\"\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({\n      copied: true\n    }, () => {\n      setTimeout(() => this.setState({\n        copied: false\n      }), 1200);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      paletteId,\n      id,\n      showLink,\n      classes,\n      showingFullPalette\n    } = this.props;\n    const {\n      copied\n    } = this.state;\n    const isDarkColor = chroma(background).luminance() <= 0.08;\n    const isLightColor = chroma(background).luminance() >= 0.7;\n    return React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.changeCopyState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: background\n      },\n      className: classes.ColorBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: background\n      },\n      className: `copy-overlay ${copied && \"show\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `copy-msg ${copied && \"show\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" copied! \"), React.createElement(\"p\", {\n      className: classes.copyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.background)), React.createElement(\"div\", {\n      className: \"copy-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.colorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \", name, \" \")), React.createElement(\"button\", {\n      className: classes.copyButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" Copy \")), showingFullPalette && React.createElement(Link, {\n      to: `/palette/${paletteId}/${id}`,\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.seeMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" MORE \"))));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["/Users/apple/Documents/gitHub/Palette-Color/src/ColorBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","ColorBox","width","height","props","showingFullPalette","margin","display","position","cursor","marginBottom","opacity","copyText","color","background","luminance","colorName","seeMore","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","fontSize","textDecoration","constructor","state","copied","changeCopyState","bind","setState","setTimeout","render","name","paletteId","id","showLink","classes","isDarkColor","isLightColor","e","stopPropagation"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport \"./ColorBox.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {Link} from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport {withStyles } from \"@material-ui/styles\";\n\n\nconst styles = {\n\tColorBox:{\n\t\twidth: \"20%\",\n\t\theight: props => props.showingFullPalette ? \"25%\": \"50%\",\n\t\tmargin: \"0 auto\",\n\t\tdisplay: \"inline-block\",\n\t\tposition: \"relative\",\n\t\tcursor: \"pointer\",\n\t\tmarginBottom:\"-3.5px\",\n\t\t\"&:hover button\":{\n\t\t\topacity: 1\n\t\t}\n\t},\n\tcopyText: {\n\t\tcolor : \n\t\t\tprops => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n\t},\n\tcolorName:{\n\t\tcolor : \n\t\t\tprops => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\"\n\t},\n\tseeMore :{\n\t\tbackground: \"rgba(255,255,255,0.3)\",\n\t\tposition: \"absolute\",\n\t\tborder:\"none\",\n\t\tright: \"0px\",\n\t\tbottom :\"0px\",\n\t\twidth: \"60px\",\n\t\theight: \"30px\",\n\t\ttextAlign: \"center\",\n\t\tlineHeight: \"30px\",\n\t\ttextTransform: \"uppercase\",\n\t\tcolor : \n\t\t\tprops => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.7)\": \"white\"\n\t},\n\tcopyButton :{\n\t\twidth: \"100px\",\n\t\theight: \"30px\",\n\t\tdisplay: \"inline-block\",\n\t\tposition: \"absolute\",\n\t\ttop:\"50%\",\n\t\tleft: \"50%\",\n\t\tmarginLeft:\" -50px\",\n\t\tmarginTop:\"-15px\",\n\t\ttextAlign: \"center\",\n\t\toutline: \"none\",\n\t\tbackground: \"rgba(255,255,255,0.3)\",\n\t\tfontSize: \"1rem\",\n\t\tlineHeight: \"0px\",\n\t\ttextTransform: \"uppercase\",\n\t\tborder:\"none\",\n\t\ttextDecoration: \"none\",\n\t\topacity : 0,\n\t\tcolor : \n\t\t\tprops => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.7)\": \"white\"\n\n\t}\n\n\n};\n\nclass ColorBox extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tcopied :false\n\t\t}\n\t\tthis.changeCopyState =this.changeCopyState.bind(this);\n\t}\n\tchangeCopyState(){\n\t\tthis.setState({ copied : true } , () =>{\n\t\t\tsetTimeout(() => this.setState({copied : false}) , 1200);\n\t\t});\n\t\t\n\t}\n\trender(){\n\n\t\tconst {name,background,paletteId,id,showLink ,classes ,showingFullPalette} = this.props;\n\t\tconst {copied} \t\t\t = this.state;\n\t\tconst isDarkColor = chroma(background).luminance() <=0.08;\n\t\tconst isLightColor = chroma(background).luminance() >= 0.7;\n\t\treturn(\n\t\t\t<CopyToClipboard text={background} onCopy={this.changeCopyState}>\n\t\t\t\t<div \n\t\t\t\t\tstyle={{background : background}}\n\t\t\t\t\tclassName= {classes.ColorBox} > \n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle={{background : background}} \n\t\t\t\t\t\tclassName={`copy-overlay ${copied && \"show\"}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={`copy-msg ${copied && \"show\"}`}>\n\t\t\t\t\t\t<h1> copied! </h1>\n\t\t\t\t\t\t\t<p className={classes.copyText}>\n\t\t\t\t\t\t\t{this.props.background} \n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"copy-container\"> \n\t\t\t\t\t\t\t<div className=\"box-content\">\n\t\t\t\t\t\t\t\t<span className ={classes.colorName}> {name} </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className={classes.copyButton}> Copy </button>\n\t\t \t\t\t\t</div>\n\t\t \t\t\t{showingFullPalette && ( \n\t\t\t \t\t\t<Link \n\t\t\t \t\t\t\tto= {`/palette/${paletteId}/${id}`} \n\t\t\t \t\t\t\tonClick={ (e) => e.stopPropagation()}\n\t\t\t \t\t\t>\n\t\t \t\t\t\t\t<span className={classes.seeMore}> MORE </span>\n\t\t \t\t\t\t</Link> \n\t \t\t\t\t)}\n\t \t\t\t</div>\n \t\t\t</CopyToClipboard>\n\t\t);\n\t}\n}\nexport default withStyles(styles)(ColorBox); "]},"metadata":{},"sourceType":"module"}